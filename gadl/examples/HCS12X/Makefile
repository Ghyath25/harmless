# 
#  Makefile for the STAR12X (STAR12 + XGate) simulator generated by HARMLESS 
#  
#  HARMLESS is copyright (c) IRCCyN 2005+
# 

#'make clean': remove obj files (but no dep files)
#'make mrproper': remove objs and dep files, and $(EXEC)

#known bug: it may generate dependancy files when a 'make clean' is called.
#workaround : use make DEP=1 to allow generation of dependancies..: "make DEP=0 mrproper"

EXEC = hcs12x

HC12_PATH  = ./hc12
XGATE_PATH = ./XGate

SRCS= \
$(HC12_PATH)/arch.cpp \
$(HC12_PATH)/elfReader.cpp \
$(HC12_PATH)/iHexReader.cpp \
$(HC12_PATH)/instConstruct.cpp \
$(HC12_PATH)/instDecoder.cpp \
$(HC12_PATH)/instDecoderCache.cpp \
$(HC12_PATH)/instExec.cpp \
$(HC12_PATH)/instMnemo.cpp \
$(HC12_PATH)/sRecordReader.cpp \
$(HC12_PATH)/storage.cpp \
$(HC12_PATH)/utils.cpp \
$(XGATE_PATH)/xgate.cpp \
$(XGATE_PATH)/instConstruct.cpp \
$(XGATE_PATH)/instDecoder.cpp \
$(XGATE_PATH)/instDecoderCache.cpp \
$(XGATE_PATH)/instExec.cpp \
$(XGATE_PATH)/instMnemo.cpp \
main.cpp \
xgateStorage.cpp

#particular config:
DEP=1
CXX=g++
OPTIM=0
CFLAGS  = -DHOST_IS_LITTLE_ENDIAN 
CFLAGS += -DGADL_NO_ACTION 
#CFLAGS += -DDEBUG 
#CFLAGS += -DDO_NOT_USE_INTERNAL_INSTRUCTION_CACHE
LDFLAGS=
EXTRA_FILES_MRPROPER= build/ 
EXTRA_FILES_CLEAN=
LIBELF = 1
CFLAGS += -I./libelf-0.8.10/lib
LDFLAGS += -I./libelf-0.8.10/lib

# end of configuration...
########################################################
# compiler optimisation
CFLAGS_DEBUG = -O0 -g -Wall -fexceptions -Wno-deprecated -ansi 
CFLAGS_OPTIM = -O3 -fstrength-reduce -frerun-loop-opt -fexpensive-optimizations -fschedule-insns2 -funroll-loops -fomit-frame-pointer -fno-strict-aliasing -pipe -ffast-math -fexceptions -DNO_DEBUG

ifeq ($(strip $(OPTIM)),1)
	CFLAGS += $(CFLAGS_OPTIM)
else
	CFLAGS += $(CFLAGS_DEBUG)
endif

ifeq ($(strip $(LIBELF)),1)
	LDFLAGS += -lelf
	CFLAGS  += -DUSE_LIBELF
endif

########################################################

OBJ_DIR = .obj
OBJ = $(addprefix $(OBJ_DIR)/,$(SRCS:.cpp=.o))
DEPFILES = $(addprefix .,$(SRCS:.cpp=.d))

.PHONY: ALL
ALL: OBJ_DIR_CREATE $(EXEC)

########################################################
# generate dep files.
#.%.d: %.cpp Makefile
#	@$(CC) $(CFLAGS) -MM $< | perl -e  'while(<STDIN>) { s/$*.o:/$(OBJ_DIR)\/$*.o .$*.d:/ ;print ;}' > $@;\
# 	echo 'build dependancy for $<'; \

########################################################

.PHONY: clean mrproper OBJ_DIR_CREATE
clean:
	@rm -rf $(OBJ_DIR) *~  $(EXTRA_FILES_CLEAN)

mrproper: clean
	@rm -rf $(OBJ_DIR) $(EXEC) $(DEPFILES) $(EXTRA_FILES_MRPROPER)

$(EXEC):  $(OBJ) 
	$(CXX) $(CFLAGS) $(LDFLAGS) -o $@ $(OBJ) 

$(OBJ_DIR)/%.o: %.cpp
	$(CXX) -c $(CFLAGS) $< -o $@

$(OBJ_DIR)/$(HC12_PATH)/%.o: $(HC12_PATH)/%.cpp
	$(CXX) -c $(CFLAGS) $< -o $@

OBJ_DIR_CREATE: 
	@if [ ! -d $(OBJ_DIR) ]; then mkdir $(OBJ_DIR); fi;
	@if [ ! -d $(OBJ_DIR)/$(HC12_PATH) ]; then mkdir $(OBJ_DIR)/$(HC12_PATH); fi;
	@if [ ! -d $(OBJ_DIR)/$(XGATE_PATH) ]; then mkdir $(OBJ_DIR)/$(XGATE_PATH); fi;

#TODO: This include implies that dependancies are created...even if the 'clean' target is called!
ifeq ($(strip $(DEP)),1)
    -include $(DEPFILES)
endif
