#!/usr/bin/python
# if not working:
# export PYTHONPATH=$PYTHONPATH:`pwd`/hc12

from hc12 import arch
import sys #exit
import getopt #argument

def disassemble(code, pc, verbose, size, ppage):
	simu = arch()
	simu.readCodeFile(code)
	simu.setPPAGE(ppage)
	simu.disassemble(pc, size)

def usage():
	print "disassemble at address defined in pc."
	print "-h/--help      : this help"
	print "-v/--verbose   : be verbose"
	print "-c/--code file : binary code file to process (.elf format required for symbols)"
	print "--pc val       : Program Counter to get the mnemo"
	print "-p/--ppage val : Program Page"
	print "-s/--size val  : number of bytes to disassemble"

def getVal(arg):
	result = 0
	if arg.find("x") != -1: #there is an 'x' -> hex
		result = int(arg,16) 
	else: #else decimal.
		result = int(arg,10)
	return result

def main(argv):
	code = ""
	pc = 0
	verbose = False
	ppage = 0
	size = 1
	try:
		opts, args = getopt.getopt(argv, "hvc:p:s:", ["help", "code=", "verbose", "pc=", "ppage=", "size="])
	except getopt.GetoptError:
		usage()
		sys.exit(2)
	for opt, arg in opts:
		if opt in ("-h", "--help"):
			usage()
			sys.exit()
			print "help found"
		elif opt in ("-v", "--verbose"):
			verbose=True
		elif opt in ("-c", "--code"):
			code = arg
		elif opt in ("--pc"):
			pc = getVal(arg)
		elif opt in ("-p", "--ppage"):
			ppage = getVal(arg)
		elif opt in ("-s", "--size"):
			size = getVal(arg)
		else:
			print "option not recognized ",opt
			sys.exit(1)
	disassemble(code, pc, verbose, size, ppage)


if __name__ == "__main__":
	main(sys.argv[1:])


