%template headerC%
#include "%!core::NAME%_instruction.h" //first for precompiled headers
#include <iostream>
#include "macro.h"
#include "%!core::NAME%_core.h"
#include "utils.h"

using namespace std;

void %!core::NAME%_instruction::release() {
	m_user --;
	SEGFAULTIF(m_user < 0);
	if(!m_user) delete this;
}

void %!core::NAME%_instructionStall::execute(%!core::NAME%_core *_core){}

// instructions without any behavior...

%
let instWithCodeMap := emptyMap
if exists core::instCodeList then #no 'no behavior' option.
  let instWithCodeMap := mapOf core::instCodeList by name
end if

foreach inst in core::INST_CONSTRUCTOR do
  if not exists instWithCodeMap[inst::name] then
    #no behavior -> add a default one.
    %void %!inst::name%::execute(%!core::NAME%_core *_core){\n%
    %\tcerr << "instruction %!inst::name% have no behavior defined" << endl;\n%
    %}\n%
  end if
end foreach

