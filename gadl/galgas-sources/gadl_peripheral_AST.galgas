

map @ASTregisterPeriphDefMap
{
  @ASTInstructionList ASTregDecList
  @luint64 address
  @lstring readFuncCall
  @lstring writeFuncCall
  @varAbstractType type #type of the register (without slices)
  insert insertKey error message "the '%K' peripheral register is already defined in %L" 
  search searchKey error message "the '%K' peripheral register is not defined"
  remove removeKey error message "the '%K' peripheral register is not defined. Can't remove it."
}

map @ASTperipheralMap
{
  @luint64 size
  @ASTregisterPeriphDefMap ASTregisterPeriphDef
  @ASTFunctionMap ASTFunctionMap
  @ASTInstructionList ASTDeviceDecList
  @ASTInstructionList ASTTypeDefList#type defs.
  @ASTInstructionList ASTLocalVarList
  @varMap varMap #registers and register slices only!
  @ASTTimingMap ASTTimingMap
  @ASTSignalConnectionList ASTSignalConnectionList
  insert insertKey error message "the '%K' peripheral is already defined in %L" 
  search searchKey error message "the '%K' peripheral is not defined"
  remove removeKey error message "the '%K' peripheral is not defined. Can't remove it."
}

getter @ASTperipheralMap string
  -> @string str {
  str = ""
  for () in  self
  before str += "AST peripheral Map:\n"  
  do
    str+= "\t"+[lkey string]+" ("+[size string]+" bytes):\n"
    for () in  ASTregisterPeriphDef 
    before
    str+= "\t\tregisters :\n"
    do
      str+= "\t\t\t"+[lkey string]+"\n"
    end
    for () in  ASTFunctionMap 
    before
    str+= "\t\tmethods :\n"
    do
      str+= "\t\t\t"+[lkey string]+"\n"
    end
  end
}


# vim:ft=galgas:ts=2:sw=2:tw=0
