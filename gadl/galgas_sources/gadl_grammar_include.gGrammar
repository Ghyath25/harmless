indexing grammar gadl_grammar_include "LL1":
with "gadl_syntax.gSyntax" ;
with "gadl_expression_parser.gSyntax" ;
with "gadl_implementation_parser.gSyntax" ;
with "gadl_instruction_syntax_parser.gSyntax" ;
with "gadl_instruction_behavior_parser.gSyntax" ;
with "gadl_instruction_format_parser.gSyntax" ;
with "gadl_instruction_cycle_parser.gSyntax" ;
with "gadl_hard_component_parser.gSyntax" ;
with "gadl_hard_pipeline_parser.gSyntax" ;
with "gadl_hard_arch_parser.gSyntax" ;
with "gadl_peripherals_parser.gSyntax" ;
with "gadl_default_parser.gSyntax" ;
with "gadl_timing_parser.gSyntax" ;

root <mainModel>
  ?! @defaultSection defaultValues
  ?! @varMap globalVarMap
  ?! @componentMap componentMap
  ?! @behaviorPrototypeMap behaviorPrototypeMap
  ?? @lstring modelName
label secondPass
  ?! @defaultSection defaultValues
  ?! @machineMap machineMap
  ?! @pipelineMap pipelineMap
  ?! @architectureMap archMap
  ?! @behaviorMap behaviorMap
  ?? @varMap globalVarMap
  ?! @behaviorPrototypeMap behaviorPrototypeMap
  ?! @formatMap formatMap
  ?? @componentMap componentMap
  ?! @varMap fieldMap
  ?! @syntaxMap syntaxMap
  ?! @instCycleMap instCycleMap
  ?! @printNumberTypeMap typeMap
  ?? @lstring modelName
  ?! @uint internalFormatId
  ?! @uint internalBehaviorId
  ?! @uint internalSyntaxId
  ?! @uint internalInstCycleId
  ?! @timingMap timingMap
;
unused <start_symbol>;

end grammar ;
# vim:ft=ggs:ts=2:sw=2
