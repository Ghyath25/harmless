semantics gadl_semantics_timingSection:
  import "gadl_semantics_timingSimulationStep.gSemantics" ;

routine timingPart
  ?! @TfieldMap templateStruct
  ?? @timingMap timingMap
  ?? @lstring modelName
:
  #compute template tools to build the required 'python script' that gets automata
  #coordinates from a dot file (see getAutomataCoordinates function).
  @string templateLog := computeTemplate[!"" !templateStruct !"tools"];
  @TfieldMapList timingTpl [emptyList];
  @stringset signalSet [emptySet];
  foreach timingMap (@lstring name 
                     @varMap varMap
                     @boolMap SignalIn
                     @boolMap SignalOut
                     @timingInstructionList instList
                     @bool externalActivation) do

    @TfieldMap timingTplBody [emptyMap];
    foreach SignalIn  (@lstring sigName) do signalSet += ![sigName string]; end foreach;
    foreach SignalOut (@lstring sigName) do signalSet += ![sigName string]; end foreach;

    addBoolMap !SignalIn  !"name" !"signalWait" !?timingTplBody;
    addBoolMap !SignalOut !"name" !"signalEmit" !?timingTplBody;

    @adjMat harmlessAutomata := computeMatAdj[!instList !varMap !externalActivation !false];
    @adjMat uppaalAutomata   := computeMatAdj[!instList !varMap !externalActivation !true];
    
    @pointList stateCoordinateList;
    getAutomataCoordinates ![modelName string] !uppaalAutomata !name ?stateCoordinateList;
    #add name
    addLStringValue !?timingTplBody !"name" !name;
    #add local vars
    addListValue !?timingTplBody !lstringWith[!"localVarUppaal"] !varMapDeclaration[!varMap ![@codeCtx Uppaal]];    
    addListValue !?timingTplBody !lstringWith[!"localVar"] !varMapDeclaration[!varMap ![@codeCtx C]];    
    #add automata (Uppaal and simulation ones).
    adjacencyMatrixTemplate !uppaalAutomata   !?timingTplBody !true !stateCoordinateList;  #Uppaal
    adjacencyMatrixTemplate !harmlessAutomata !?timingTplBody !false !stateCoordinateList; #sim

    addBoolValue !?timingTplBody !lstringWith[!"onActivation"] !externalActivation;
    getSimulationSteps !harmlessAutomata !?timingTplBody !externalActivation;
    timingTpl += !timingTplBody;
  end foreach;
  addListValue !?templateStruct !lstringWith[!"timingList"] !timingTpl;
  addListValue !?templateStruct !lstringWith[!"signalDefinedInTiming"] !stringSetToList[!signalSet !"name"];;
  #testCopy;
end routine;

routine addBoolMap
  ?? @boolMap boolmap
  ?? @string key
  ?? @string mapName
  ?! @TfieldMap templateStruct
:
  @TfieldMapList itemList [emptyList];
  foreach boolmap (@lstring val) do
    @TfieldMap itemBody [emptyMap];  
    addLStringValue !?itemBody !key !val;
    itemList += !itemBody;
  end foreach;
  addListValue !?templateStruct !lstringWith[!mapName] !itemList;
end routine;

end semantics ;
# vim:ft=ggs:ts=2:sw=2
