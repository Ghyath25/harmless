semantics gadl_semantics_peripherals_data_structures:
  import "gadl_options.gOption" ;
  import "gadl_semantics_expression.gSemantics" ;
  import "gadl_semantics_implementation.gSemantics";

# structure related to peripherals.
# associate a register to a read or write action.
list @readWriteActionList {
  @bool accessType; #true -> read, false ->write
  @lstring regName;
  @instructionList code;
}

list @cyclicPartList
{
  @cExpression cycleExp;     #returns 1 value only. interval between 2 activations
  @cExpression conditionExp; #cyclic condition.
  @instructionList instList; #body
  @uint id;                  #unique Id for implementation.
}

end semantics ;
# vim:ft=ggs:ts=2:sw=2
