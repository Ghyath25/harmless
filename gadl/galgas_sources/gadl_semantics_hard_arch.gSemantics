semantics gadl_semantics_hard_arch:
  import "gadl_options.gOption" ;

#----------------------------------------------------------------------------
#--- Architecture
#----------------------------------------------------------------------------

########### data storage ##############
#What is contained into a device (alias of method or port).
abstract class @functionAllowedToAPort {
}

class @isOr extends @functionAllowedToAPort {
  @lstringlist functionAllowedList;
  @luint numberOfPermission;
}

class @isWithNumber extends @functionAllowedToAPort {
  @lstring functionAllowedName;
  @luint numberOfPermission;
}
 
class @isAll extends @functionAllowedToAPort {
  @luint numberOfPermission;
}

class @isExcept extends @functionAllowedToAPort {
  @lstringlist functionExcludedList;
}

#key is the method name.
map @aliasMap {
  insert insertKey error message "the '%K' alias is already defined in %L" ; 
  search searchKey error message "the '%K' alias is not defined in the map" ;
  remove removeKey error message "the '%K' alias is not defined and cannot be removed." ;
}

map @portMap {
  @bool isShared;
  @functionAllowedToAPort functionAllowedToAPort;
  insert insertKey error message "the '%K' port is already defined in %L" ; 
  search searchKey error message "the '%K' port is not defined in the device." ;
  remove removeKey error message "the '%K' port is not defined and cannot be removed." ;
}

# Map to store for each device (the name of device is the key of map) 
#the set of ports and  methods used
map @deviceMap{
  @lstring  componentName; #the name of component
  @portMap  portMap;       #ports for the device.
  @aliasMap readAliasMap;  #aliases for the 'read' access
  @aliasMap writeAliasMap; #aliases for the 'write' access
  insert insertKey error message "the '%K' device is already defined in %L" ; 
  search searchKey error message "the '%K' device is not defined in the architecture" ;
  remove removeKey error message "the '%K' device is not defined and cannot be removed." ;
}

#signal related structure
list @signalConnectionList {
    @lstring devNameSrc;
    @lstring devNameDst;
    @lstring sigNameSrc;
    @lstring sigNameDst;
    @bool noDst;
}

list @sharedPortActivationList {
  @lstring deviceSrc;
  @lstring portSrc;
  @lstring deviceName;
}

class @signalConnectPart {
  @signalConnectionList signalConnectionList;
  @sharedPortActivationList sharedPortActivationList;
}

#Map to store all architectures (the name of architecture is the key of map) 
#(if there are more than one)
map @architectureMap{
  @deviceMap deviceMap;
  @signalConnectPart signalConnectPart;
  insert insertKey error message "the '%K' architecture is already defined in %L" ; 
  search searchKey error message "the '%K' architecture is not defined in the map" ;
  remove removeKey error message "the '%K' architecture is not defined and cannot be removed." ;
}

end semantics ;
# vim:ft=ggs:ts=2:sw=2
