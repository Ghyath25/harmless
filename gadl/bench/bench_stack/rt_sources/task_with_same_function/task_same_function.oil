/* Running the following example:
 *just call goil a first time using the command line:
 *goil --target=arm -g --templates=../../goil/templates/ arm.oil
 *(COMPILER, LINKER and ASSEMBLER in OS section may be adapted to your 
 * specific install of avr cross-compiler)
 *
 *Then a Makefile is generated. Just type:
 *make
 *To clean the project, call:
 *make clean
 * It will remove all generated files, except the Makefile.
 */

// Trampoline Base Path have to be adapted in ../_common_oil/common_os_config.oil
#include "../_common_oil/common_config.oil" // Default Parameters


CPU test {

  OS config{
    APP_NAME = "task_same_function.elf";
    APP_SRC = "main.c";
  };

// !! Trampoline base path have to be updated !!

// !! CONFIG !!
// Chose your target (change goil templates location)

/* ARM */
//#include "../_common_oil/arm.oil"
//goil --generate-makefile --target=arm/olimex_lpc_e2294 --templates=../../../../../../trampoline/goil/templates/ -i  basic_test.oil

/* AVR */
//#include "../_common_oil/avr.oil"
//goil --generate-makefile --target=avr --templates=../../../../../../trampoline/goil/templates/ -i  basic_test.oil

/* PPC */
// "target.cfg" for PPC only
#include "../_common_oil/ppc.oil"
// goil --generate-makefile --target=?? --templates=../../../../../../../trampoline/goil/templates/ -i  basic_test.oil


    APPMODE std {
    };

    TASK startTask {
        PRIORITY = 5;
        AUTOSTART = TRUE {APPMODE = std;};
        ACTIVATION = 1;
        SCHEDULE = FULL;
        STACKSIZE = 256;
    };

    TASK secondTask {
        PRIORITY = 6;
        AUTOSTART = FALSE;
        ACTIVATION = 1;
        SCHEDULE = FULL;
        STACKSIZE = 256;
    };

	 TASK thirdTask {
        PRIORITY = 7;
        AUTOSTART = FALSE;
        ACTIVATION = 1;
        SCHEDULE = FULL;
        STACKSIZE = 256;
    };

	 TASK fourthTask {
        PRIORITY = 8;
        AUTOSTART = FALSE;
        ACTIVATION = 1;
        SCHEDULE = FULL;
        STACKSIZE = 256;
    };



};
