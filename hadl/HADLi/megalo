
domain HADLi:EBNF filter "hadli" abstract

transformation HADLdEcore2HADLiEcore (in IN:HADLd:Ecore, out OUT:HADLi:Ecore) using ATLEngine:BASH:EBNF {
  SOURCE_MODELS=IN:HADLd:Ecore,
  TARGET_MODELS=OUT:HADLi:Ecore,
  TRANSFORMATION_MODEL=HADLd2HADLi:ASM:XML,
  LIBRARY_MODELS=strings:ASM:XML
}

transformation HADLiPrescheduleEcore (in IN:HADLi:Ecore, out OUT:HADLi:Ecore) using ATLEngine:BASH:EBNF {
  SOURCE_MODELS=IN:HADLi:Ecore,
  TARGET_MODELS=OUT:HADLi:Ecore,
  TRANSFORMATION_MODEL=HADLiPreschedule:ASM:XML,
  LIBRARY_MODELS=strings:ASM:XML
}

transformation HADLiScheduleEcore (in IN:HADLi:Ecore, out OUT:HADLi:Ecore) using ATLEngine:BASH:EBNF {
  SOURCE_MODELS=IN:HADLi:Ecore,
  TARGET_MODELS=OUT:HADLi:Ecore,
  TRANSFORMATION_MODEL=HADLiSchedule:ASM:XML,
  LIBRARY_MODELS=strings:ASM:XML
}

transformation HADLiGroupEcore (in IN:HADLi:Ecore, out OUT:HADLi:Ecore) using ATLEngine:BASH:EBNF {
  SOURCE_MODELS=IN:HADLi:Ecore,
  TARGET_MODELS=OUT:HADLi:Ecore,
  TRANSFORMATION_MODEL=HADLiGroup:ASM:XML,
  LIBRARY_MODELS=strings:ASM:XML
}

transformation HADLiEcore2HADLiEBNF (in IN:HADLi:Ecore, out OUT:HADLi:EBNF) using EBNFExtractor:BASH:EBNF {
   SOURCE_MODEL=IN:HADLi:Ecore,
   TARGET_MODEL=OUT:HADLi:EBNF,
   SYNTAX_MODEL=HADLi:TCS:Ecore
}

