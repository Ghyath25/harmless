
-------------------------------------------------
-- XGate architecture model
-------------------------------------------------

model XGate:HADL:Ecore
apply HADLEBNF2HADLEcore {
   IN=XGate:HADL:EBNF,
   OUT=XGate:HADL:Ecore
}

-------------------------------------------------
-- XGate Decoder module and header
-------------------------------------------------

model XGateDecoderRaw:HADLc:Ecore
apply HADLEcore2HADLcDecoderEcore {
  IN=XGate:HADL:Ecore,
  OUT=XGateDecoderRaw:HADLc:Ecore
}

model XGateDecoderModule:HADLc:Ecore
apply HADLcEcoreExpand {
  IN=XGateDecoderRaw:HADLc:Ecore,
  OUT=XGateDecoderModule:HADLc:Ecore
}

model XGateDecoderModule:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=XGateDecoderModule:HADLc:Ecore,
  OUT=XGateDecoderModule:HADLc:EBNF
}

model XGateDecoderHeader:HADLc:Ecore
apply HADLcEcoreHeader {
  IN=XGateDecoderRaw:HADLc:Ecore,
  OUT=XGateDecoderHeader:HADLc:Ecore
}

model XGateDecoderHeader:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=XGateDecoderHeader:HADLc:Ecore,
  OUT=XGateDecoderHeader:HADLc:EBNF
}

-------------------------------------------------
-- XGate Disassembler module and header
-------------------------------------------------

model XGateDisassemblerRaw:HADLc:Ecore
apply HADLEcore2HADLcDisassemblerEcore {
  IN=XGate:HADL:Ecore,
  OUT=XGateDisassemblerRaw:HADLc:Ecore
}

model XGateDisassemblerModule:HADLc:Ecore
apply HADLcEcoreExpand {
  IN=XGateDisassemblerRaw:HADLc:Ecore,
  OUT=XGateDisassemblerModule:HADLc:Ecore
}

model XGateDisassemblerModule:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=XGateDisassemblerModule:HADLc:Ecore,
  OUT=XGateDisassemblerModule:HADLc:EBNF
}

model XGateDisassemblerHeader:HADLc:Ecore
apply HADLcEcoreHeader {
  IN=XGateDisassemblerRaw:HADLc:Ecore,
  OUT=XGateDisassemblerHeader:HADLc:Ecore
}

model XGateDisassemblerHeader:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=XGateDisassemblerHeader:HADLc:Ecore,
  OUT=XGateDisassemblerHeader:HADLc:EBNF
}

-------------------------------------------------
-- XGate Runner module and header
-------------------------------------------------

model XGateRunnerRaw:HADLc:Ecore
apply HADLEcore2HADLcRunnerEcore {
  IN=XGate:HADL:Ecore,
  OUT=XGateRunnerRaw:HADLc:Ecore
}

model XGateRunnerModule:HADLc:Ecore
apply HADLcEcoreExpand {
  IN=XGateRunnerRaw:HADLc:Ecore,
  OUT=XGateRunnerModule:HADLc:Ecore
}

model XGateRunnerModule:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=XGateRunnerModule:HADLc:Ecore,
  OUT=XGateRunnerModule:HADLc:EBNF
}

model XGateRunnerHeader:HADLc:Ecore
apply HADLcEcoreHeader {
  IN=XGateRunnerRaw:HADLc:Ecore,
  OUT=XGateRunnerHeader:HADLc:Ecore
}

model XGateRunnerHeader:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=XGateRunnerHeader:HADLc:Ecore,
  OUT=XGateRunnerHeader:HADLc:EBNF
}

-------------------------------------------------
-- XGate Simulator module and header
-------------------------------------------------

model XGateSimulatorRaw:HADLc:Ecore
apply HADLEcore2HADLcSimulatorEcore {
  IN=XGate:HADL:Ecore,
  OUT=XGateSimulatorRaw:HADLc:Ecore
}

model XGateSimulatorModule:HADLc:Ecore
apply HADLcEcoreExpand {
  IN=XGateSimulatorRaw:HADLc:Ecore,
  OUT=XGateSimulatorModule:HADLc:Ecore
}

model XGateSimulatorModule:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=XGateSimulatorModule:HADLc:Ecore,
  OUT=XGateSimulatorModule:HADLc:EBNF
}

model XGateSimulatorHeader:HADLc:Ecore
apply HADLcEcoreHeader {
  IN=XGateSimulatorRaw:HADLc:Ecore,
  OUT=XGateSimulatorHeader:HADLc:Ecore
}

model XGateSimulatorHeader:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=XGateSimulatorHeader:HADLc:Ecore,
  OUT=XGateSimulatorHeader:HADLc:EBNF
}

-------------------------------------------------
-- XGate dependency extraction model
-------------------------------------------------

model XGate:HADLd:Ecore
apply HADLEcore2HADLdEcore {
   IN=XGate:HADL:Ecore,
   OUT=XGate:HADLd:Ecore
}

model XGate:HADLd:EBNF
apply HADLdEcore2HADLdEBNF {
   IN=XGate:HADLd:Ecore,
   OUT=XGate:HADLd:EBNF
}

model XGateDep:HADLd:Ecore
apply HADLdDepEcore {
   IN=XGate:HADLd:Ecore,
   OUT=XGateDep:HADLd:Ecore
}

model XGateDep:HADLd:EBNF
apply HADLdEcore2HADLdEBNF {
   IN=XGateDep:HADLd:Ecore,
   OUT=XGateDep:HADLd:EBNF
}

model XGateMerge:HADLd:Ecore
apply HADLdMergeEcore {
   IN=XGateDep:HADLd:Ecore,
   OUT=XGateMerge:HADLd:Ecore
}

model XGateMerge:HADLd:EBNF
apply HADLdEcore2HADLdEBNF {
   IN=XGateMerge:HADLd:Ecore,
   OUT=XGateMerge:HADLd:EBNF
}

model XGateReduce:HADLd:Ecore
apply HADLdReduceEcore {
   IN=XGateMerge:HADLd:Ecore,
   OUT=XGateReduce:HADLd:Ecore
}

model XGateReduce:HADLd:EBNF
apply HADLdEcore2HADLdEBNF {
   IN=XGateReduce:HADLd:Ecore,
   OUT=XGateReduce:HADLd:EBNF
}

-------------------------------------------------
-- XGate instruction extraction model
-------------------------------------------------

model XGate:HADLi:Ecore
apply HADLdEcore2HADLiEcore {
   IN=XGateReduce:HADLd:Ecore,
   OUT=XGate:HADLi:Ecore
}

model XGate:HADLi:EBNF
apply HADLiEcore2HADLiEBNF {
   IN=XGate:HADLi:Ecore,
   OUT=XGate:HADLi:EBNF
}

-----

model XGatePre:HADLi:Ecore
apply HADLiPrescheduleEcore {
   IN=XGate:HADLi:Ecore,
   OUT=XGatePre:HADLi:Ecore
}

model XGatePre:HADLi:EBNF
apply HADLiEcore2HADLiEBNF {
   IN=XGatePre:HADLi:Ecore,
   OUT=XGatePre:HADLi:EBNF
}

model XGatePost:HADLi:Ecore
apply HADLiScheduleEcore {
   IN=XGatePre:HADLi:Ecore,
   OUT=XGatePost:HADLi:Ecore
}

model XGatePost:HADLi:EBNF
apply HADLiEcore2HADLiEBNF {
   IN=XGatePost:HADLi:Ecore,
   OUT=XGatePost:HADLi:EBNF
}

model XGateGroup:HADLi:Ecore
apply HADLiGroupEcore {
   IN=XGatePost:HADLi:Ecore,
   OUT=XGateGroup:HADLi:Ecore
}

model XGateGroup:HADLi:EBNF
apply HADLiEcore2HADLiEBNF {
   IN=XGateGroup:HADLi:Ecore,
   OUT=XGateGroup:HADLi:EBNF
}

-------------------------------------------------
-- XGate export to P2A
-------------------------------------------------

model XGatepFE:PRM:Ecore
apply PRMEBNF2PRMEcore {
   IN=XGatepFE:PRM:EBNF,
   OUT=XGatepFE:PRM:Ecore
}

model XGatepFE:P2A:Ecore
apply HADLiEcore2P2AEcore {
   IN=XGateGroup:HADLi:Ecore,
   OUT=XGatepFE:P2A:Ecore,
   P=XGatepFE:PRM:Ecore
}

model XGatepFE:P2A:EBNF
apply P2AEcore2P2AEBNF {
   IN=XGatepFE:P2A:Ecore,
   OUT=XGatepFE:P2A:EBNF
}

-----

model XGatepFDEAMR:PRM:Ecore
apply PRMEBNF2PRMEcore {
   IN=XGatepFDEAMR:PRM:EBNF,
   OUT=XGatepFDEAMR:PRM:Ecore
}

model XGatepFDEAMR:P2A:Ecore
apply HADLiEcore2P2AEcore {
   IN=XGateGroup:HADLi:Ecore,
   OUT=XGatepFDEAMR:P2A:Ecore,
   P=XGatepFDEAMR:PRM:Ecore
}

model XGatepFDEAMR:P2A:EBNF
apply P2AEcore2P2AEBNF {
   IN=XGatepFDEAMR:P2A:Ecore,
   OUT=XGatepFDEAMR:P2A:EBNF
}

