
-------------------------------------------------
-- ARM architecture model
-------------------------------------------------

model ARM:HADL:Ecore
apply HADLEBNF2HADLEcore {
   IN=ARM:HADL:EBNF,
   OUT=ARM:HADL:Ecore
}

-------------------------------------------------
-- ARM Decoder module and header
-------------------------------------------------

model ARMDecoderRaw:HADLc:Ecore
apply HADLEcore2HADLcDecoderEcore {
  IN=ARM:HADL:Ecore,
  OUT=ARMDecoderRaw:HADLc:Ecore
}

model ARMDecoderModule:HADLc:Ecore
apply HADLcEcoreExpand {
  IN=ARMDecoderRaw:HADLc:Ecore,
  OUT=ARMDecoderModule:HADLc:Ecore
}

model ARMDecoderModule:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=ARMDecoderModule:HADLc:Ecore,
  OUT=ARMDecoderModule:HADLc:EBNF
}

model ARMDecoderHeader:HADLc:Ecore
apply HADLcEcoreHeader {
  IN=ARMDecoderRaw:HADLc:Ecore,
  OUT=ARMDecoderHeader:HADLc:Ecore
}

model ARMDecoderHeader:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=ARMDecoderHeader:HADLc:Ecore,
  OUT=ARMDecoderHeader:HADLc:EBNF
}

-------------------------------------------------
-- ARM Disassembler module and header
-------------------------------------------------

model ARMDisassemblerRaw:HADLc:Ecore
apply HADLEcore2HADLcDisassemblerEcore {
  IN=ARM:HADL:Ecore,
  OUT=ARMDisassemblerRaw:HADLc:Ecore
}

model ARMDisassemblerModule:HADLc:Ecore
apply HADLcEcoreExpand {
  IN=ARMDisassemblerRaw:HADLc:Ecore,
  OUT=ARMDisassemblerModule:HADLc:Ecore
}

model ARMDisassemblerModule:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=ARMDisassemblerModule:HADLc:Ecore,
  OUT=ARMDisassemblerModule:HADLc:EBNF
}

model ARMDisassemblerHeader:HADLc:Ecore
apply HADLcEcoreHeader {
  IN=ARMDisassemblerRaw:HADLc:Ecore,
  OUT=ARMDisassemblerHeader:HADLc:Ecore
}

model ARMDisassemblerHeader:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=ARMDisassemblerHeader:HADLc:Ecore,
  OUT=ARMDisassemblerHeader:HADLc:EBNF
}

-------------------------------------------------
-- ARM Runner module and header
-------------------------------------------------

model ARMRunnerRaw:HADLc:Ecore
apply HADLEcore2HADLcRunnerEcore {
  IN=ARM:HADL:Ecore,
  OUT=ARMRunnerRaw:HADLc:Ecore
}

model ARMRunnerModule:HADLc:Ecore
apply HADLcEcoreExpand {
  IN=ARMRunnerRaw:HADLc:Ecore,
  OUT=ARMRunnerModule:HADLc:Ecore
}

model ARMRunnerModule:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=ARMRunnerModule:HADLc:Ecore,
  OUT=ARMRunnerModule:HADLc:EBNF
}

model ARMRunnerHeader:HADLc:Ecore
apply HADLcEcoreHeader {
  IN=ARMRunnerRaw:HADLc:Ecore,
  OUT=ARMRunnerHeader:HADLc:Ecore
}

model ARMRunnerHeader:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=ARMRunnerHeader:HADLc:Ecore,
  OUT=ARMRunnerHeader:HADLc:EBNF
}

-------------------------------------------------
-- ARM Simulator module and header
-------------------------------------------------

model ARMSimulatorRaw:HADLc:Ecore
apply HADLEcore2HADLcSimulatorEcore {
  IN=ARM:HADL:Ecore,
  OUT=ARMSimulatorRaw:HADLc:Ecore
}

model ARMSimulatorModule:HADLc:Ecore
apply HADLcEcoreExpand {
  IN=ARMSimulatorRaw:HADLc:Ecore,
  OUT=ARMSimulatorModule:HADLc:Ecore
}

model ARMSimulatorModule:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=ARMSimulatorModule:HADLc:Ecore,
  OUT=ARMSimulatorModule:HADLc:EBNF
}

model ARMSimulatorHeader:HADLc:Ecore
apply HADLcEcoreHeader {
  IN=ARMSimulatorRaw:HADLc:Ecore,
  OUT=ARMSimulatorHeader:HADLc:Ecore
}

model ARMSimulatorHeader:HADLc:EBNF
apply HADLcEcore2HADLcEBNF {
  IN=ARMSimulatorHeader:HADLc:Ecore,
  OUT=ARMSimulatorHeader:HADLc:EBNF
}

-------------------------------------------------
-- ARM dependency extraction model
-------------------------------------------------

model ARM:HADLd:Ecore
apply HADLEcore2HADLdEcore {
   IN=ARM:HADL:Ecore,
   OUT=ARM:HADLd:Ecore
}

model ARM:HADLd:EBNF
apply HADLdEcore2HADLdEBNF {
   IN=ARM:HADLd:Ecore,
   OUT=ARM:HADLd:EBNF
}

model ARMDep:HADLd:Ecore
apply HADLdDepEcore {
   IN=ARM:HADLd:Ecore,
   OUT=ARMDep:HADLd:Ecore
}

model ARMDep:HADLd:EBNF
apply HADLdEcore2HADLdEBNF {
   IN=ARMDep:HADLd:Ecore,
   OUT=ARMDep:HADLd:EBNF
}

model ARMMerge:HADLd:Ecore
apply HADLdMergeEcore {
   IN=ARMDep:HADLd:Ecore,
   OUT=ARMMerge:HADLd:Ecore
}

model ARMMerge:HADLd:EBNF
apply HADLdEcore2HADLdEBNF {
   IN=ARMMerge:HADLd:Ecore,
   OUT=ARMMerge:HADLd:EBNF
}

model ARMReduce:HADLd:Ecore
apply HADLdReduceEcore {
   IN=ARMMerge:HADLd:Ecore,
   OUT=ARMReduce:HADLd:Ecore
}

model ARMReduce:HADLd:EBNF
apply HADLdEcore2HADLdEBNF {
   IN=ARMReduce:HADLd:Ecore,
   OUT=ARMReduce:HADLd:EBNF
}

-------------------------------------------------
-- ARM instruction extraction model
-------------------------------------------------

model ARM:HADLi:Ecore
apply HADLdEcore2HADLiEcore {
   IN=ARMReduce:HADLd:Ecore,
   OUT=ARM:HADLi:Ecore
}

model ARM:HADLi:EBNF
apply HADLiEcore2HADLiEBNF {
   IN=ARM:HADLi:Ecore,
   OUT=ARM:HADLi:EBNF
}

-----

model ARMPre:HADLi:Ecore
apply HADLiPrescheduleEcore {
   IN=ARM:HADLi:Ecore,
   OUT=ARMPre:HADLi:Ecore
}

model ARMPre:HADLi:EBNF
apply HADLiEcore2HADLiEBNF {
   IN=ARMPre:HADLi:Ecore,
   OUT=ARMPre:HADLi:EBNF
}

model ARMPost:HADLi:Ecore
apply HADLiScheduleEcore {
   IN=ARMPre:HADLi:Ecore,
   OUT=ARMPost:HADLi:Ecore
}

model ARMPost:HADLi:EBNF
apply HADLiEcore2HADLiEBNF {
   IN=ARMPost:HADLi:Ecore,
   OUT=ARMPost:HADLi:EBNF
}

model ARMGroup:HADLi:Ecore
apply HADLiGroupEcore {
   IN=ARMPost:HADLi:Ecore,
   OUT=ARMGroup:HADLi:Ecore
}

model ARMGroup:HADLi:EBNF
apply HADLiEcore2HADLiEBNF {
   IN=ARMGroup:HADLi:Ecore,
   OUT=ARMGroup:HADLi:EBNF
}

-------------------------------------------------
-- ARM export to P2A
-------------------------------------------------

model ARMpFDE:PRM:Ecore
apply PRMEBNF2PRMEcore {
   IN=ARMpFDE:PRM:EBNF,
   OUT=ARMpFDE:PRM:Ecore
}

model ARMpFDE:P2A:Ecore
apply HADLiEcore2P2AEcore {
   IN=ARMGroup:HADLi:Ecore,
   OUT=ARMpFDE:P2A:Ecore,
   P=ARMpFDE:PRM:Ecore
}

model ARMpFDE:P2A:EBNF
apply P2AEcore2P2AEBNF {
   IN=ARMpFDE:P2A:Ecore,
   OUT=ARMpFDE:P2A:EBNF
}

-----

model ARMpFDEMR:PRM:Ecore
apply PRMEBNF2PRMEcore {
   IN=ARMpFDEMR:PRM:EBNF,
   OUT=ARMpFDEMR:PRM:Ecore
}

model ARMpFDEMR:P2A:Ecore
apply HADLiEcore2P2AEcore {
   IN=ARMGroup:HADLi:Ecore,
   OUT=ARMpFDEMR:P2A:Ecore,
   P=ARMpFDEMR:PRM:Ecore
}

model ARMpFDEMR:P2A:EBNF
apply P2AEcore2P2AEBNF {
   IN=ARMpFDEMR:P2A:Ecore,
   OUT=ARMpFDEMR:P2A:EBNF
}

