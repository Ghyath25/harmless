
model HADLc:KM3:Ecore
apply KM3EBNF2KM3Ecore {
   IN=HADLc:KM3:EBNF,
   OUT=HADLc:KM3:Ecore
}

domain HADLc:Ecore filter "hadlcmodel"
apply KM3Ecore2Ecore {
   IN=HADLc:KM3:Ecore,
   OUT=HADLc:Ecore
}

-----------------------------------------

model HADLc:TCS:Ecore
apply TCSEBNF2TCSEcore {
   IN=HADLc:TCS:EBNF,
   OUT=HADLc:TCS:Ecore
}

-----------------------------------------

model HADLcExpand:ASM:XML
apply ATL2ASM {
   IN=HADLcExpand:ATL:EBNF,
   OUT=HADLcExpand:ASM:XML
}

model HADLcHeader:ASM:XML
apply ATL2ASM {
   IN=HADLcHeader:ATL:EBNF,
   OUT=HADLcHeader:ASM:XML
}

model HADL2HADLcDecoder:ASM:XML
apply ATL2ASM {
  IN=HADL2HADLcDecoder:ATL:EBNF,
  OUT=HADL2HADLcDecoder:ASM:XML
}

model HADL2HADLcDisassembler:ASM:XML
apply ATL2ASM {
  IN=HADL2HADLcDisassembler:ATL:EBNF,
  OUT=HADL2HADLcDisassembler:ASM:XML
}

model HADL2HADLcRunner:ASM:XML
apply ATL2ASM {
  IN=HADL2HADLcRunner:ATL:EBNF,
  OUT=HADL2HADLcRunner:ASM:XML
}

model HADL2HADLcSimulator:ASM:XML
apply ATL2ASM {
  IN=HADL2HADLcSimulator:ATL:EBNF,
  OUT=HADL2HADLcSimulator:ASM:XML
}

model HADL2HADLcHelpers:ASM:XML
apply ATL2ASM {
  IN=HADL2HADLcHelpers:ATL:EBNF,
  OUT=HADL2HADLcHelpers:ASM:XML
}

