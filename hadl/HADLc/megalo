
domain HADLc:EBNF filter "hadl.cpp" abstract

transformation HADLcEcoreExpand (in IN:HADLc:Ecore, out OUT:HADLc:Ecore) using ATLEngine:BASH:EBNF {
  SOURCE_MODELS=IN:HADLc:Ecore,
  TARGET_MODELS=OUT:HADLc:Ecore,
  TRANSFORMATION_MODEL=HADLcExpand:ASM:XML,
  LIBRARY_MODELS=strings:ASM:XML
}

transformation HADLcEcoreHeader (in IN:HADLc:Ecore, out OUT:HADLc:Ecore) using ATLEngine:BASH:EBNF {
  SOURCE_MODELS=IN:HADLc:Ecore,
  TARGET_MODELS=OUT:HADLc:Ecore,
  TRANSFORMATION_MODEL=HADLcHeader:ASM:XML,
  LIBRARY_MODELS=strings:ASM:XML
}

transformation HADLcEcore2HADLcEBNF (in IN:HADLc:Ecore, out OUT:HADLc:EBNF) using EBNFExtractor:BASH:EBNF {
   SOURCE_MODEL=IN:HADLc:Ecore,
   TARGET_MODEL=OUT:HADLc:EBNF,
   SYNTAX_MODEL=HADLc:TCS:Ecore
}

transformation HADLEcore2HADLcDecoderEcore (in IN:HADL:Ecore, out OUT:HADLc:Ecore) using ATLEngine:BASH:EBNF {
  SOURCE_MODELS=IN:HADL:Ecore,
  TARGET_MODELS=OUT:HADLc:Ecore,
  TRANSFORMATION_MODEL=HADL2HADLcDecoder:ASM:XML,
  LIBRARY_MODELS=strings:ASM:XML HADL2HADLcHelpers:ASM:XML
}

transformation HADLEcore2HADLcDisassemblerEcore (in IN:HADL:Ecore, out OUT:HADLc:Ecore) using ATLEngine:BASH:EBNF {
  SOURCE_MODELS=IN:HADL:Ecore,
  TARGET_MODELS=OUT:HADLc:Ecore,
  TRANSFORMATION_MODEL=HADL2HADLcDisassembler:ASM:XML,
  LIBRARY_MODELS=strings:ASM:XML HADL2HADLcHelpers:ASM:XML
}

transformation HADLEcore2HADLcRunnerEcore (in IN:HADL:Ecore, out OUT:HADLc:Ecore) using ATLEngine:BASH:EBNF {
  SOURCE_MODELS=IN:HADL:Ecore,
  TARGET_MODELS=OUT:HADLc:Ecore,
  TRANSFORMATION_MODEL=HADL2HADLcRunner:ASM:XML,
  LIBRARY_MODELS=strings:ASM:XML HADL2HADLcHelpers:ASM:XML
}

transformation HADLEcore2HADLcSimulatorEcore (in IN:HADL:Ecore, out OUT:HADLc:Ecore) using ATLEngine:BASH:EBNF {
  SOURCE_MODELS=IN:HADL:Ecore,
  TARGET_MODELS=OUT:HADLc:Ecore,
  TRANSFORMATION_MODEL=HADL2HADLcSimulator:ASM:XML,
  LIBRARY_MODELS=strings:ASM:XML HADL2HADLcHelpers:ASM:XML
}

