
package P2A {

   abstract class NamedElement {
      attribute name : String;
   }

   class ConfigurationFile {
      attribute version : Integer;
      reference statements[*] ordered : Statement oppositeOf configurationFile;
   }

   abstract class Statement {
      reference configurationFile : ConfigurationFile oppositeOf statements;
   }

   class Pipeline extends NamedElement, Statement {
      reference stages[*] ordered container : Stage oppositeOf owningPipeline;
      reference resources[*] container : Resource oppositeOf owningPipeline;
      reference instructionClasses[*] container : InstructionClass oppositeOf owningPipeline;
   }

   class Stage extends NamedElement, Statement {
      reference owningPipeline : Pipeline oppositeOf stages;
   }

   class Resource extends NamedElement, Statement {
      reference owningPipeline : Pipeline oppositeOf resources;
      attribute isExternal : Boolean;
      attribute priority : Integer;
      attribute parallelism : Integer;
   }

   class InstructionClass extends NamedElement, Statement {
      reference owningPipeline : Pipeline oppositeOf instructionClasses;
      reference resourceUsages[*] container : ResourceUsage oppositeOf owningInstructionClass;
   }

   abstract class ResourceUsage extends Statement {
      reference owningInstructionClass : InstructionClass oppositeOf resourceUsages;
      reference resource : Resource;
      reference stage : Stage;
   }

   class Dependency extends ResourceUsage {
   }

   class GetResource extends ResourceUsage {
   }

   class ReleaseResource extends ResourceUsage {
   }
}

package PrimitiveTypes {
   datatype Integer;
   datatype String;
   datatype Boolean;
}

